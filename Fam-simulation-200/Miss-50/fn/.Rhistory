library(foreach)
library(doParallel)
registerDoParallel(cores = 20)
library(LFSPRO)
sourceDir <- function(path, trace = TRUE, ...) {
for (nm in list.files(path, pattern = "[.][RrSsQq]$")) {
if(trace) cat(nm,":")
source(file.path(path, nm), ...)
if(trace) cat("\n")
}
}
sourceDir("fn")
batch <- 1
n.sim <- 20
start <- n.sim * (batch - 1) + 1
end <- n.sim * batch
K <- 2
N <- 300
phi <- rep(1, K)
# estimation setting
n.sample <- 30000  # of posterior samples
M <- 2             # degrees of Bernstein polynomials
# Set-up
true.beta <- beta <- matrix(c(3, 1, 2, 2, 2, 1), nrow = 3) # regression coefficients (test, D_1, D_2)
lambda <- c(0.001, 0.001)     # baseline intensity
theta.c <- 80                 # hazard for censoring time
pG <- pi <- 0.001             # maf prevalence
cancer_type <- c(1, 2)
dyn.load("fn/cpp/source/CalPeelingProbLIK.so")
library(foreach)
library(doParallel)
registerDoParallel(cores = 20)
library(LFSPRO)
sourceDir <- function(path, trace = TRUE, ...) {
for (nm in list.files(path, pattern = "[.][RrSsQq]$")) {
if(trace) cat(nm,":")
source(file.path(path, nm), ...)
if(trace) cat("\n")
}
}
sourceDir("fn")
batch <- 1
n.sim <- 20
start <- n.sim * (batch - 1) + 1
end <- n.sim * batch
K <- 2
N <- 300
phi <- rep(1, K)
# estimation setting
n.sample <- 30000  # of posterior samples
M <- 2             # degrees of Bernstein polynomials
# Set-up
true.beta <- beta <- matrix(c(3, 1, 2, 2, 2, 1), nrow = 3) # regression coefficients (test, D_1, D_2)
lambda <- c(0.001, 0.001)     # baseline intensity
theta.c <- 80                 # hazard for censoring time
pG <- pi <- 0.001             # maf prevalence
cancer_type <- c(1, 2)
dyn.load("fn/cpp/source/CalPeelingProbLIK.so")
library(LFSPRO)
View(calLK.mpc)
library(LFSPRO)
View(calLK.mpc)
dnorm(2,4,1)
dnorm(4,2,1)
library(foreach)
library(doParallel)
registerDoParallel(cores = 25)
library(LFSPRO)
sourceDir <- function(path, trace = TRUE, ...) {
for (nm in list.files(path, pattern = "[.][RrSsQq]$")) {
if(trace) cat(nm,":")
source(file.path(path, nm), ...)
if(trace) cat("\n")
}
}
sourceDir("fn")
batch <- 1
n.sim <- 25
start <- n.sim * (batch - 1) + 1
end <- n.sim * batch
K <- 2
N <- 200
phi <- rep(1, K)
# estimation setting
n.sample <- 30000  # of posterior samples
M <- 2             # degrees of Bernstein polynomials
# Set-up
true.beta <- beta <- matrix(c(4, 2, 3, 3, 3, 2), nrow = 3) # regression coefficients (test, D_1, D_2)
lambda <- c(0.001, 0.001)     # baseline intensity
theta.c <- 80                 # hazard for censoring time
pG <- pi <- 0.001             # maf prevalence
cancer_type <- c(1, 2)
iter <- 1
temp <- data.gen(seed = iter, N, pi, beta, lambda, theta.c, phi, miss = T)
dyn.load("fn/cpp/source/CalPeelingProbLIK.so")
